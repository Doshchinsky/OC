clang_createIndex - создаёт shared-контекст для создания TU (translation unit/единица трансляции)

translationUnit - в языках программирования Си и Си++ единица трансляции подаваемый на вход компилятора исходный текст (файл с расширением .c или .cpp) со всеми включёнными в него файлами.

clang_parseTranslationUnit - парсит входной файл и TU относящиеся к нему. На вход поступает:
CIdx - индекс объекта с которым будет связан TU;
source_filename - название входного файла или NULL, если оно включено в аргументы командной строки;
command_line_args - аргументы командной строки поступающие на вход clang'а;
num_command_line_args - количество аргументов командной строки;
unsaved_files - файлы, которые еще не записаны на диски, но могут быть затребованы для парсинга, включая их содержимое;
num_unsaved_files - количество несохранённых файлов;
options - битмаска опций, которая влияет на то, как TU будет сформирован, но не влияет на компиляцию.

clang_getNumDiagnostics - определяет количество диагностик, которые будут проведенны над заданным TU

clang_getDiagnostic - извлекает диагностическую информацию, связанную с заданным TU

clang_getDiagnosticCategoryText - извлекает название категории диагностики, проводимую над TU

clang_getDiagnosticSpelling - извлекает содержимое результата диагностики

clang_getDiagnosticSeverity - указывает "строгость" диагностик

clang_getDiagnosticLocation - извлекает место, где проводилась диагностика, т.е. то, где clang поставит '^' при выводе на экран

clang_getPresumedLocation - извлекает файл, линию и столбец в указанном исходном месте (читай файле). Указывает предполагаемое местоположение.

clang_disposeString/clang_disposeDiagnostic/clang_disposeTranslationUnit/clang_disposeIndex/clang_disposeTokens - освобождение памяти от ...

clang_getLocationForOffset - извлекает начальное местоположение, связанное с указанным сдвигом в конкретном TU

clang_getRange - извлекает исходный диапазон для заданных начала и конца начальных местоположений

clang_getCursorExtent - извлекает физичекский размер входной конструкции, относящейся к заданному курсору (указателю) 

clang_tokenize - разбивает исходный код на лексические токены, описанные в заданном диапазоне

clang_getTokenKind - указывает тип заданного токена

clang_getTokenSpelling - указывает текстовое отображение токена (индентификатор/ключевое слово)

getDefaultTargetTriple - возвращает информацию о рабочей машине в следующей форме: CPU_TYPE-VENDOR-OPERATING_SYSTEM или CPU_TYPE-VENDOR-KERNEL-OPERATING_SYSTEM. Triple - потому что ЦПУ, ОС/ядро ОС

CI.getDiagnosticClient().BeginSourceFile(CI.getLangOpts(), 0):
CI (CompilerInstance) - вспомогательный класс для управления одним образцом Clang-компилятора
getDiagnosticClient - 0 инфы в доках
BeginSourceFile - подготовка к обработке входного файла
getLangOpts - 0 инфы в доках
По сути, в этой команде содержится список диагностик, которые мы проводим над кодом